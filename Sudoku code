/* Author: Harjot singh Dhunna
   Demo: Cmput 355 Ass 4 */

#include <stdio.h>

// a sudoku grid initialized
int sudoku[9][9] = {0, 0, 0, 0, 2, 7, 6, 0, 0,
		    0, 0, 9, 0, 0, 6, 0, 5, 0,
		    6, 7, 0, 0, 8, 0, 0, 3, 9,
		    0, 0, 5, 0, 6, 0, 7, 9, 0,
		    7, 1, 0, 0, 4, 0, 0, 2, 5,
		    0, 9, 8, 0, 1, 0, 4, 0, 0,
		    1, 6, 0, 0, 5, 0, 0, 8, 2,
		    0, 2, 0, 6, 0, 0, 5, 0, 0,
		    0, 0, 4, 2, 7, 0, 0, 0, 0};

/*int sudoku[9][9] = {0, 0, 0, 0, 0, 0, 0, 0, 8,
		    1, 8, 0, 0, 0, 2, 3, 0, 0,
		    0, 6, 0, 0, 5, 7, 0, 0, 1,
		    0, 7, 0, 9, 6, 0, 0, 0, 0,
		    0, 9, 0, 7, 0, 4, 0, 1, 0,
		    0, 0, 0, 0, 8, 1, 0, 4, 0,
		    6, 0, 0, 2, 4, 0, 0, 8, 0,
		    0, 0, 4, 5, 0, 0, 0, 9, 3,
		    5, 0, 0, 0, 0, 0, 0, 0, 0};

int sudoku[9][9] = {0, 2, 0, 1, 0, 0, 0, 0, 0,
		    0, 3, 0, 6, 0, 0, 0, 7, 8,
		    6, 0, 0, 0, 7, 0, 3, 5, 0,
		    0, 0, 4, 0, 0, 5, 0, 0, 0,
		    9, 0, 0, 0, 0, 0, 0, 0, 2,
		    0, 0, 0, 8, 0, 0, 9, 0, 0,
		    0, 9, 1, 0, 3, 0, 0, 0, 6,
		    8, 5, 0, 0, 0, 6, 0, 2, 0,
		    0, 0, 0, 0, 0, 7, 0, 9, 0}; */

// function that prints the initial and the solved grid 
void print () {
  for (int i = 0; i < 9; i++) {
    for (int j = 0; j < 9; j++) {
      printf("%d ", sudoku[i][j]);
    }
    printf("\n");
  }
    printf("\n");
}

//function that solves the inputted grid
int solve (int x, int y) {
  int num = 1;
  int tempx = 0;
  int tempy = 0;
  if (sudoku[x][y] == 0) {
    while (num < 10) {
      if (!samebox (x, y, num) && !samerow (x, y, num) && !samecolumn (x, y, num)) {
	sudoku[x][y] = num;
	if (x == 8 && y == 8) {
	  return 1;
	}
	if (x < 8) {
	  tempx = x + 1;
	} else {
	  if (y < 8) {
	    tempx = 0;
	    tempy = y + 1;
	  }
	}
	if (solve(tempx, tempy)) {
	  return 1;
	} 
      }
      num++;
    }
    sudoku[x][y] = 0;
    return 0;
  }   
  
  if (sudoku[x][y] != 0) {
    if (x == 8 && y == 8) {
      return 1;
    }
    if (x < 8) {
      x++;
    } else {
      if (y < 8) {
	x = 0;
	y++;
      }
    }
    if (solve(x, y)) {
      return 1;
    } else {
      return 0;
    }
  }
}

//checks if the number to be added repeats in the row
int samerow (int x, int y, int num) {
  for (int i = 0; i < 9; i++) {
    if (sudoku[i][y] == num) {
      return 1;
    }
  }
  return 0;
}

//checks if the number to be added repeats in the column
int samecolumn (int x, int y, int num) {
  for (int i = 0; i < 9; i++) {
    if (sudoku[x][i] == num) {
      return 1;
    }
  }
  return 0;
}

//checks if the number to be added is seen in the 3x3 box
int samebox (int x, int y, int num) {
  if (x < 3) {
    x = 0;
  } else if (x < 6) {
    x = 3;
  } else {
    x = 6;
  }

  if (y < 3) {
    y = 0;
  } else if (y < 6) {
    y = 3;
  } else {
    y = 6;
  }

  for (int i = x; i < x + 3; i++) {
    for (int j = y; j < y + 3; j++) {
      if (sudoku[i][j] == num) {
	return 1;
      }
    }
  }
  return 0;
}

int main () {
  int x = 0;
  int y = 0;
  printf("\nInitial unsolved grid: \n\n");
  print();
  solve(x, y);
  printf("Solved grid: \n\n");
  print();
  return 0;
}
